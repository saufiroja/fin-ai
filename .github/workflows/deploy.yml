
name: Deploy to VM

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Langkah 1: Checkout kode dari repositori
      # Ini diperlukan agar workflow bisa mengakses kode Anda.
      - name: Checkout code
        uses: actions/checkout@v4

      # Langkah 2: SSH dan Deploy
      # Menggunakan action populer untuk menjalankan perintah melalui SSH.
      - name: SSH and Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            # Pindah ke direktori proyek di VM
            cd ${{ secrets.PROJECT_PATH }}
            
            # Membuat file .env yang akan dibaca otomatis oleh Docker Compose
            # Ini adalah cara standar dan paling andal untuk mengelola secrets.
            echo "Creating .env file..."
            cat <<EOF > .env
            OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
            GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}
            EOF

            # Ambil perubahan terbaru dari branch main
            echo "Pulling latest changes..."
            git pull origin main
            
            # Menjalankan perintah Docker dengan 'sudo' dan menggunakan 'docker compose' (V2)
            echo "Building Docker images..."
            sudo docker compose build
            
            # Menjalankan ulang service dalam mode detached (background)
            echo "Restarting services..."
            sudo docker compose up -d --remove-orphans
            
            # Membersihkan image Docker yang tidak terpakai (dangling)
            echo "Pruning unused Docker images..."
            sudo docker image prune -f
            
            echo "Deployment successful!"
