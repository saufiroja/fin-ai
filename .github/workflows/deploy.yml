name: Deploy to Production

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production

env:
  GO_VERSION: '1.24'

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'production' }}
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Build application
      env:
        # Production secrets (these must be set in GitHub repository secrets)
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        # Production database configuration
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_PORT: ${{ secrets.DB_PORT }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASS: ${{ secrets.DB_PASS }}
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_SSL_MODE: ${{ secrets.DB_SSL_MODE || 'require' }}
        # Production Redis configuration
        REDIS_HOST: ${{ secrets.REDIS_HOST }}
        REDIS_PORT: ${{ secrets.REDIS_PORT || '6379' }}
        # Production Minio configuration
        MINIO_ENDPOINT: ${{ secrets.MINIO_ENDPOINT }}
        MINIO_ACCESS_KEY: ${{ secrets.MINIO_ACCESS_KEY }}
        MINIO_SECRET_KEY: ${{ secrets.MINIO_SECRET_KEY }}
        MINIO_REGION: ${{ secrets.MINIO_REGION || 'us-east-1' }}
        MINIO_USE_SSL: ${{ secrets.MINIO_USE_SSL || 'true' }}
        # App configuration
        GO_ENV: production
        HTTP_PORT: ${{ secrets.HTTP_PORT || '8080' }}
      run: |
        CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -installsuffix cgo -ldflags '-extldflags "-static"' -o bin/fin-ai ./cmd

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ secrets.DOCKER_USERNAME }}/fin-ai
        tags: |
          type=ref,event=tag
          type=raw,value=latest,enable=${{ github.ref_type == 'tag' }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    # Example deployment to a server (uncomment and configure as needed)
    # - name: Deploy to server
    #   uses: appleboy/ssh-action@v1.0.3
    #   with:
    #     host: ${{ secrets.DEPLOY_HOST }}
    #     username: ${{ secrets.DEPLOY_USER }}
    #     key: ${{ secrets.DEPLOY_KEY }}
    #     script: |
    #       docker pull ${{ secrets.DOCKER_USERNAME }}/fin-ai:latest
    #       docker stop fin-ai || true
    #       docker rm fin-ai || true
    #       docker run -d \
    #         --name fin-ai \
    #         --restart unless-stopped \
    #         -p 8080:8080 \
    #         -e OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}" \
    #         -e GEMINI_API_KEY="${{ secrets.GEMINI_API_KEY }}" \
    #         -e JWT_SECRET="${{ secrets.JWT_SECRET }}" \
    #         -e DB_HOST="${{ secrets.DB_HOST }}" \
    #         -e DB_PORT="${{ secrets.DB_PORT }}" \
    #         -e DB_USER="${{ secrets.DB_USER }}" \
    #         -e DB_PASS="${{ secrets.DB_PASS }}" \
    #         -e DB_NAME="${{ secrets.DB_NAME }}" \
    #         -e DB_SSL_MODE="${{ secrets.DB_SSL_MODE }}" \
    #         -e REDIS_HOST="${{ secrets.REDIS_HOST }}" \
    #         -e REDIS_PORT="${{ secrets.REDIS_PORT }}" \
    #         -e MINIO_ENDPOINT="${{ secrets.MINIO_ENDPOINT }}" \
    #         -e MINIO_ACCESS_KEY="${{ secrets.MINIO_ACCESS_KEY }}" \
    #         -e MINIO_SECRET_KEY="${{ secrets.MINIO_SECRET_KEY }}" \
    #         -e MINIO_REGION="${{ secrets.MINIO_REGION }}" \
    #         -e MINIO_USE_SSL="${{ secrets.MINIO_USE_SSL }}" \
    #         -e GO_ENV=production \
    #         -e HTTP_PORT=8080 \
    #         ${{ secrets.DOCKER_USERNAME }}/fin-ai:latest