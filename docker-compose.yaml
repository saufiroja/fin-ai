version: '3.7'

services:
  # fin-ai:
  #   image: fin-ai:0.0.1
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   ports:
  #     - '8080:8080'
  #   depends_on:
  #     - postgres
  #   networks:
  #     - fin-ai
  #   environment:
  #     - DB_HOST=postgres
  #     - DB_PORT=5432
  #     - DB_USER=postgres
  #     - DB_PASS=postgres
  #     - DB_NAME=postgres
  #     - DB_SSL_MODE=disable
  #     # Add other environment variables your app needs
  #     - GO_ENV=development
  #     - JWT_SECRET=secret
  #     - OPENAI_API_KEY=your_openai_api_key # Change this
  #     - GEMINI_API_KEY=your_gemini_api_key # Change this
  #     - MINIO_ENDPOINT=minio:9000
  #     - MINIO_ACCESS_KEY=minioadmin
  #     - MINIO_SECRET_KEY=minioadmin
  #     - MINIO_REGION=us-east-1
  #     - MINIO_USE_SSL=false
  #     - REDIS_HOST=redis
  #     - REDIS_PORT=6379

  postgres:
    image: ankane/pgvector
    container_name: postgres
    ports:
      - '5434:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d/
    networks:
      - fin-ai

  redis:
    image: redis:7
    container_name: redis
    ports:
      - '6379:6379'
    networks:
      - fin-ai

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - '8081:8081'
    depends_on:
      - redis
    networks:
      - fin-ai

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - '9000:9000' # S3-compatible API
      - '9001:9001' # Web UI
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    networks:
      - fin-ai

networks:
  fin-ai:
    driver: bridge

volumes:
  postgres-data:
  minio-data:
